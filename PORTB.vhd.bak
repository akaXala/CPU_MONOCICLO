library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity PORTB is
    port (
        clk    : in  STD_LOGIC;                      -- Entrada de reloj (Clock)
        clr    : in  STD_LOGIC;                      -- Entrada de reset asíncrono (Clear)
        enable : in  STD_LOGIC;                      -- Entrada de habilitación (Enable)
        I      : in  STD_LOGIC_VECTOR(7 downto 0); -- Entrada de datos (1 byte)
        O      : out STD_LOGIC_VECTOR(7 downto 0)  -- Salida de datos (1 byte)
    );
end entity PORTB;

-- Definición de la arquitectura (comportamiento del componente)
architecture Behavioral of PORTB is
begin

    -- Proceso principal sensible al reloj y al reset asíncrono
    process(clk, clr)
    begin
        -- Reset Asíncrono (activo alto)
        -- Tiene prioridad sobre el reloj
        if clr = '1' then
            O <= (others => '0'); -- Pone todos los bits de la salida O a '0'

        -- Lógica Síncrona (en el flanco de subida del reloj)
        elsif rising_edge(clk) then
            -- Comprueba si la habilitación está activa
            if enable = '1' then
                O <= I; -- Carga el valor de la entrada I en la salida O
            end if;
            -- Nota: Si 'enable' es '0', no hay asignación explícita a 'O' dentro
            -- del 'rising_edge(clk)'. En VHDL para lógica secuencial, esto implica
            -- que 'O' mantiene su valor anterior (comportamiento de registro).
        end if;
    end process;

end architecture Behavioral;